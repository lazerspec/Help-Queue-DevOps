pipeline {
    agent any

    stages {
        stage('Docker login') {
           steps {
                sh "echo Logging into Docker..."
                 sh "ls"
                 sh "sudo docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASS}"
               }
            }
        stage('Docker Build') {
            steps {
               sh "echo Building the application..."
               sh "ls"
               sh "sudo docker build -t parvir/nginx-loadbalancer:latest --build-arg TICKET_UI_CLUSTER_IP=$TICKET_UI_CLUSTER_IP --build-arg TICKET_API_CLUSTER_IP=$TICKET_API_CLUSTER_IP -f loadbalancer/Dockerfile ."
            }
        }
        stage('Deploy to Dockerhub') {
            steps {
            sh "echo Deploying to the docker hub"
            sh "sudo docker push parvir/nginx-loadbalancer:latest"
            }
        }
        stage('Delete image from server') {
            steps {
            sh "echo Deleting image locally"
            sh "sudo docker image rm parvir/nginx-loadbalancer"
            }
        }
    }
}